<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.dao.StudentDao">
<select id="selectStudentById"  resultType="org.example.daomain.Student">
    select id,name,email,age from student where id=#{studentid}
</select>

<select id="selectMulitParam"  resultType="org.example.daomain.Student">
    select id,name,email,age from student where name=#{myname} or age=#{myage}
</select>

    <select id="seleceStudentReturnViewStudent" resultType="org.example.vo.ViewStudent">
         select id,name,email,age from student where id = #{sid}
    </select>


    <select id="countStudent" resultType="int">
        select count(*) from student;
    </select>

    <select id="selectMapById" resultType="java.util.HashMap">
        select id,name from student where id = #{stuid};
    </select>
<!--    使用resultMap
    1.先定义一个resultmap
    2.在select标签，使用resultmap来引用定义

-->

        <!--
        id：自定义名称，表示你这个resultMap
        type：java类型的全限定名称
        -->
    <resultMap id="studentMap" type="org.example.daomain.Student">
<!--            列名和java属性的关系
                注解列，使用id标签
                column:列名
                property：属性名
-->
        <id column="id" property="id"/>
<!--        非主键列,使用result-->
        <result column="name" property="name"/>
        <result column="email" property="name"/>
        <result column="age" property="age"/>
    </resultMap>

    <select id="selectAllStudent" resultMap="studentMap">
        select id,name,email,age from student
    </select>

<!--==================================================================================-->

    <resultMap id="mystudentMap" type="org.example.daomain.MyStudent">

        <id column="id" property="myid"/>

        <!--        非主键列,使用result-->
        <result column="name" property="myname"/>
        <result column="email" property="myemail"/>
        <result column="age" property="myage"/>
    </resultMap>

<!--    列名不一样第一种方式-->
    <select id="selectMyStudent" resultMap="mystudentMap">
        select id,name,email,age from student
    </select>

    <!--    列名不一样第二种方式
    resultType的默认原则是  同名的列值赋给同名的署性，使用列别名,列别名为java署性名
    -->

    <select id="selectDiffColProperty" resultType="org.example.daomain.MyStudent">
         select id as myid,name as myname,email as myemail,age as myage from student
    </select>

<!--    第一种Like   java代码中来指定like的内容-->

    <select id="selectLikeOne" resultType="org.example.daomain.MyStudent">
        select id,name,email,age from student where name like  #{name}
    </select>


    <select id="selectLikeTwo" resultType="org.example.daomain.MyStudent">
        select id,name,email,age from student where name like "%" #{name} "%"
    </select>
</mapper>